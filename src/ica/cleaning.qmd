---
title: "Cleaning SFO Weather Data"
---
```{r}
library(tidyverse)
library(lubridate)
library(dplyr)
library(lubridate)
library(data.table)
```

::: {.callout-note title="Helpful Data Wrangling Notes"}
- `month.abb` is a built-in object in R with 3-letter month abbreviations
- You can create your own data frame with the `tibble()` function. Look up the documentation for this function by typing `?tibble::tibble` in the Console.
- You can create regular sequences in R with `:`, eg, `3:5` generates the sequence `c(3, 4, 5)`.
- You can create regular sequences in R with `seq()`, eg, `seq(from = 3, to = 5, by = 1)` generates the sequence `c(3, 4, 5)`.  Look up the documentation for this function by typing `?seq` in the Console.
:::

::: {.callout-important title="Practicing Keyboard Shortcuts"}
Try out the following as you work on this exercise:

- Tab completion (Try this out when writing your file paths! Typing out a partial path will pull up a mini file-explorer)
- Insert a code chunk
- Run a code chunk
- Navigating around words and lines (selecting and deleting them)
- Run selected lines (not a whole code chunk)
- Insert the assignment operator (`<-`)
- Insert the pipe operator (`|>`)
:::

## Exercise

Carryout the following steps to clean and save the San Francisco Weather data.  Make sure to download and add the data file to your portfolio repository as instructed.

1. Read in the weather data in this file with the correct relative file path after you move it to the instructed location.
2. There is a variable that has values that don't make sense in the data context. Figure out which variable this is and clean it up by making those values missing using `na_if()`.
3. Create a variable called `dateInYear` that indicates the day of the year (1-365) for each case. (Jan 1 should be 1, and Dec 31 should be 365).
4. Create a variable called `month_name` that shows the 3-letter abbreviation for each case.
5. Save the wrangled data to the `data/processed/` folder using `write_csv()`. Name this file `weather_clean.csv`. Look up the documentation for this function by typing `?write_csv` in the Console. You'll need to write an appropriate relative path.


```{r}
# Solving Questions
raw_weather <- read.csv("../../data/raw/weather.csv")
clean_weather <- raw_weather %>% 
  mutate(PrecipYr = na_if(PrecipYr, 99999)) %>%
  mutate(dateInYear = yday(as_date(date, format = ('%m/%d/%y')))) %>% 
  mutate(month_name = month.abb[Month])
write.csv(clean_weather, "../../data/processed/weather_clean.csv")
```

